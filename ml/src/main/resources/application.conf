com.github.dronegator.wordmetrix {
  nn {
    n-klassen = 10
    //n-gram = 1000
    //n-sample = 100000
    regularization = 0.0 //000001
    maxIter = 200
    range: 1.0
    dropout = 20
    tolerance = 1E-05
    memory-limit = 7
    use-lbfgs = false
    rfo = 0.1
    winner-gets-all = false
    cross-validation-context = 10
    cross-validation-words = 10
  }

  common {
    crossvalidation-ratio = 10
    double-crossvalidation-ratio = 10
    algorithm = LBFGS
    regularization = 0.0 //0000001
    range = 1.0
    max-iter = 200
    rfo = 0.1
    tolerance = 1E-05
    memory-limit = 7
    crossvalidation-frequency = 10
    lambda = 1.0
    delta = 1E-5
    eta = 4
    step-size = 1.0,
    min-improvement-window = 50
    learn = true
  }

  keyword = ${com.github.dronegator.wordmetrix.common}

  keyword {
    n-klassen = 10
    //nToken = 1
    dropout = 0
    winner-gets-all = false
  }

  chain = ${com.github.dronegator.wordmetrix.common}

  chain {
    n-klassen = 200
    n-token = 200
    range = 0.8
    regularization = 0.0000005
    dropout = 0
    winner-gets-all = false
    algorithm = LBFGS
    max-iter = 2000
    insignificance = 0.02,
    oppression = 0.002
  }

  // Learning on 200-words sample with const and without learning on unknown words
  // It converges on 250 iters to ~0.17 err
  //

  chain-micro200 {
    n-klassen = 200
    n-token = 200
    range = 0.8
    regularization = 0.0000005
    dropout = 0
    winner-gets-all = false
    algorithm = LBFGS
    max-iter = 2000
    insignificance = 0.02,
    oppression = 0.002
  }

  chain-micro {
    n-klassen = 80
    n-token = 110
    regularization = 0.0000005
    dropout = 0
    winner-gets-all = false
    algorithm = LBFGS
    max-iter = 2000
  }
}

include "wordmetrix"


